<?xml version="1.0" encoding="us-ascii"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>git-feed: a script to generate Atom feeds for git commit logs </title><link href="https://github.com/brennen/git-feed/"/><link href="https://raw.githubusercontent.com/brennen/git-feed/master/sample_feed.xml" rel="self"/><author><name>Brennen Bearnes</name></author><id>https://github.com/brennen/git-feed/</id><generator>XML::Atom::SimpleFeed</generator><updated>2014-10-28T06:01:58Z</updated><entry><title>be less clever about return value</title><link href="https://github.com/brennen/git-feed/"/><id>4ebb36290858e8d4dcdc39f98cbdac8a676e332f</id><content type="html">&lt;pre&gt;commit 4ebb36290858e8d4dcdc39f98cbdac8a676e332f
Author: Brennen Bearnes &#38;lt;bbearnes@gmail.com&#38;gt;
Date:   Tue Oct 28 05:54:09 2014 -0600

    be less clever about return value

diff --git a/git-feed b/git-feed
index 191480d..d31f6b6 100755
--- a/git-feed
+++ b/git-feed
@@ -21,9 +21,9 @@ the feed itself).
 It can be configured for a given repository by doing something like the
 following:
 
-  git config feed.projecturl https://p1k3.com/userland-book/
-  git config feed.url https://p1k3.com/userland-book/feed.xml
-  echo &#38;#39;userland: a book about the command line for human beings&#38;#39; &#38;gt; .git/description
+    git config feed.projecturl https://p1k3.com/userland-book/
+    git config feed.url https://p1k3.com/userland-book/feed.xml
+    echo &#38;#39;userland: a book about the command line for human beings&#38;#39; &#38;gt; .git/description
 
 I have I&#38;lt;no idea&#38;gt; whether this sort of thing is considered an acceptable use of 
 git configuration, but it seems to work.
@@ -74,7 +74,7 @@ user.name.
 
 =head1 EXAMPLES
 
-    git feed --project_url=https://p1k3.com/userland-book/ &#38;gt; feed.xml
+    git-feed --project_url=https://p1k3.com/userland-book/ &#38;gt; feed.xml
 
 =head1 INSTALLING
 
@@ -90,6 +90,11 @@ or:
 ...depending on which one gave me less static on a given system.  I don&#38;#39;t
 really know what I&#38;#39;m doing in the Perl ecosystem any more, though.
 
+Anyway, if you put git-feed in your path, you can probably invoke it like
+any other git subcommand:
+
+    git feed &#38;gt; feed.xml
+
 =head1 AUTHOR
 
 Brennen Bearnes &#38;lt;bbearnes@gmail.com&#38;gt;
@@ -221,4 +226,5 @@ sub git_config {
   my ($key) = @_;
   my $value = capturex([0,1], &#38;#39;git&#38;#39;, &#38;#39;config&#38;#39;, &#38;#39;--get&#38;#39;, $key);
   chomp($value);
+  return $value;
 }
&lt;/pre&gt;</content><updated>2014-10-28 05:54:09 -0600</updated></entry><entry><title>some TODO-ish comments</title><link href="https://github.com/brennen/git-feed/"/><id>e1b06c25923a6344e964a5d2de047d2009ac94a2</id><content type="html">&lt;pre&gt;commit e1b06c25923a6344e964a5d2de047d2009ac94a2
Author: Brennen Bearnes &#38;lt;bbearnes@gmail.com&#38;gt;
Date:   Tue Oct 28 05:37:21 2014 -0600

    some TODO-ish comments

diff --git a/git-feed b/git-feed
index 056d4b2..191480d 100755
--- a/git-feed
+++ b/git-feed
@@ -108,9 +108,14 @@ use XML::Atom::SimpleFeed;
 use HTML::Entities;
 use Getopt::Long;
 use POSIX qw(strftime);
+
+# Turns out to be pretty much exactly what I want for system calls:
 use IPC::System::Simple qw(capturex);
 
-# Figure out where top-level .git resides:
+# Figure out where top-level .git/ resides.  Naturally, &#38;quot;rev-parse&#38;quot; was the
+# first command that leapt to mind when I wondered if there was a builtin way
+# to ask that question.  I mean, what kind of loser would have had to google
+# something so _blindingly obvious_?
 my $repo_base = git(&#38;#39;rev-parse&#38;#39;, &#38;#39;--show-toplevel&#38;#39;);
 chomp($repo_base);
 
@@ -156,7 +161,7 @@ my $feed = XML::Atom::SimpleFeed-&#38;gt;new(
   id        =&#38;gt; $project_link,
   generator =&#38;gt; &#38;#39;XML::Atom::SimpleFeed&#38;#39;,
 
-  # this could be better - just uses current time, at the moment:
+  # This could be better - just uses current time, at the moment:
   updated   =&#38;gt; iso_date(time()),
 );
 
@@ -167,6 +172,12 @@ while ($log =~ m/^([a-z0-9]+) _ (.*) _ (.*)$/gm) {
   my $date = $2;
   my $subj = $3;
 
+  # Right now, this doesn&#38;#39;t do anything clever with links for individual
+  # commits.  That&#38;#39;s because I&#38;#39;m mostly using it for things that are single
+  # HTML files, so it doesn&#38;#39;t seem to matter much.  It would probably be smart
+  # to let users specify a different base path for these so they can link
+  # GitHub or what-have-you.
+
   $feed-&#38;gt;add_entry(
     title     =&#38;gt; $subj,
     link      =&#38;gt; $project_link,
@@ -183,7 +194,8 @@ sub iso_date {
   return strftime(&#38;quot;%Y-%m-%dT%H:%M:%SZ&#38;quot;, localtime($time));
 }
 
-# get the contents of a file
+# Get contents of a file as a string, because a File::Slurp dependency seemed
+# like overkill:
 sub slurp {
   my ($file) = @_;
   my $everything;
@@ -196,14 +208,15 @@ sub slurp {
   $everything = &#38;lt;$fh&#38;gt;;
 
   close $fh
-    or die &#38;quot;Couldn&#38;#39;t close: $!&#38;quot;;
+    or die &#38;quot;Couldn&#38;#39;t close $file: $!&#38;quot;;
 
   return $everything;
 }
 
-# run git with some options, return result
+# Run git with some options, return result:
 sub git { capturex(&#38;#39;git&#38;#39;, @_); }
 
+# Return a git config value - will be an empty string for unset values:
 sub git_config {
   my ($key) = @_;
   my $value = capturex([0,1], &#38;#39;git&#38;#39;, &#38;#39;config&#38;#39;, &#38;#39;--get&#38;#39;, $key);
&lt;/pre&gt;</content><updated>2014-10-28 05:37:21 -0600</updated></entry><entry><title>better docs</title><link href="https://github.com/brennen/git-feed/"/><id>7cc1ab1ffb28783e36cd881ef21525ee53c9777e</id><content type="html">&lt;pre&gt;commit 7cc1ab1ffb28783e36cd881ef21525ee53c9777e
Author: Brennen Bearnes &#38;lt;bbearnes@gmail.com&#38;gt;
Date:   Tue Oct 28 05:10:18 2014 -0600

    better docs

diff --git a/README.pod b/README.pod
index d18a96c..6a196e0 100644
--- a/README.pod
+++ b/README.pod
@@ -10,6 +10,24 @@ git-feed [ B&#38;lt;--project_url=...&#38;gt; ]
 
 =head1 DESCRIPTION
 
+I keep a lot of projects in git, and I like to provide feeds for things I&#38;#39;m
+working on.  This script wraps git and XML::Atom::SimpleFeed to generate a
+basic Atom feed of commits.  It tries to use information already available in
+the environment, but needs to be given a URL for your project (and probably for
+the feed itself).
+
+It can be configured for a given repository by doing something like the
+following:
+
+  git config feed.projecturl https://p1k3.com/userland-book/
+  git config feed.url https://p1k3.com/userland-book/feed.xml
+  echo &#38;#39;userland: a book about the command line for human beings&#38;#39; &#38;gt; .git/description
+
+I have I&#38;lt;no idea&#38;gt; whether this sort of thing is considered an acceptable use of 
+git configuration, but it seems to work.
+
+...or you can supply various options on the command line.
+
 B&#38;lt;--project_url=...&#38;gt;
 
 =over
@@ -56,6 +74,20 @@ user.name.
 
     git feed --project_url=https://p1k3.com/userland-book/ &#38;gt; feed.xml
 
+=head1 INSTALLING
+
+I&#38;#39;ll wrap this in a module and add a build script.  For now, install
+XML::Atom::SimpleFeed first.  I would probably do that either with:
+
+    cpanp -i XML::Atom::SimpleFeed
+
+or:
+
+    apt-get install libxml-atom-simplefeed-perl
+
+...depending on which one gave me less static on a given system.  I don&#38;#39;t
+really know what I&#38;#39;m doing in the Perl ecosystem any more, though.
+
 =head1 AUTHOR
 
 Brennen Bearnes &#38;lt;bbearnes@gmail.com&#38;gt;
diff --git a/git-feed b/git-feed
index 2c0299e..056d4b2 100755
--- a/git-feed
+++ b/git-feed
@@ -12,6 +12,24 @@ git-feed [ B&#38;lt;--project_url=...&#38;gt; ]
 
 =head1 DESCRIPTION
 
+I keep a lot of projects in git, and I like to provide feeds for things I&#38;#39;m
+working on.  This script wraps git and XML::Atom::SimpleFeed to generate a
+basic Atom feed of commits.  It tries to use information already available in
+the environment, but needs to be given a URL for your project (and probably for
+the feed itself).
+
+It can be configured for a given repository by doing something like the
+following:
+
+  git config feed.projecturl https://p1k3.com/userland-book/
+  git config feed.url https://p1k3.com/userland-book/feed.xml
+  echo &#38;#39;userland: a book about the command line for human beings&#38;#39; &#38;gt; .git/description
+
+I have I&#38;lt;no idea&#38;gt; whether this sort of thing is considered an acceptable use of 
+git configuration, but it seems to work.
+
+...or you can supply various options on the command line.
+
 B&#38;lt;--project_url=...&#38;gt;
 
 =over
@@ -58,6 +76,20 @@ user.name.
 
     git feed --project_url=https://p1k3.com/userland-book/ &#38;gt; feed.xml
 
+=head1 INSTALLING
+
+I&#38;#39;ll wrap this in a module and add a build script.  For now, install
+XML::Atom::SimpleFeed first.  I would probably do that either with:
+
+    cpanp -i XML::Atom::SimpleFeed
+
+or:
+
+    apt-get install libxml-atom-simplefeed-perl
+
+...depending on which one gave me less static on a given system.  I don&#38;#39;t
+really know what I&#38;#39;m doing in the Perl ecosystem any more, though.
+
 =head1 AUTHOR
 
 Brennen Bearnes &#38;lt;bbearnes@gmail.com&#38;gt;
&lt;/pre&gt;</content><updated>2014-10-28 05:10:18 -0600</updated></entry><entry><title>initial commit - import from userland-book</title><link href="https://github.com/brennen/git-feed/"/><id>870fa5d2310044f7de62172a861017c1256df9f8</id><content type="html">&lt;pre&gt;commit 870fa5d2310044f7de62172a861017c1256df9f8
Author: Brennen Bearnes &#38;lt;bbearnes@gmail.com&#38;gt;
Date:   Tue Oct 28 04:51:03 2014 -0600

    initial commit - import from userland-book

diff --git a/COPYING b/COPYING
new file mode 100644
index 0000000..d511905
--- /dev/null
+++ b/COPYING
@@ -0,0 +1,339 @@
+		    GNU GENERAL PUBLIC LICENSE
+		       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation&#38;#39;s software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author&#38;#39;s protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors&#38;#39; reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone&#38;#39;s free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+		    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The &#38;quot;Program&#38;quot;, below,
+refers to any such program or work, and a &#38;quot;work based on the Program&#38;quot;
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term &#38;quot;modification&#38;quot;.)  Each licensee is addressed as &#38;quot;you&#38;quot;.
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program&#38;#39;s
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients&#38;#39; exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and &#38;quot;any
+later version&#38;quot;, you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+			    NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM &#38;quot;AS IS&#38;quot; WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+	    How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the &#38;quot;copyright&#38;quot; line and a pointer to where the full notice is found.
+
+    &#38;lt;one line to give the program&#38;#39;s name and a brief idea of what it does.&#38;gt;
+    Copyright (C) &#38;lt;year&#38;gt;  &#38;lt;name of author&#38;gt;
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w&#38;#39;.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c&#38;#39; for details.
+
+The hypothetical commands `show w&#38;#39; and `show c&#38;#39; should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w&#38;#39; and `show c&#38;#39;; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a &#38;quot;copyright disclaimer&#38;quot; for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision&#38;#39; (which makes passes at compilers) written by James Hacker.
+
+  &#38;lt;signature of Ty Coon&#38;gt;, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.
diff --git a/README.pod b/README.pod
new file mode 100644
index 0000000..d18a96c
--- /dev/null
+++ b/README.pod
@@ -0,0 +1,67 @@
+=pod
+
+=head1 NAME
+
+git-feed - generate an Atom feed of git commits in the current repository
+
+=head1 SYNOPSIS
+
+git-feed [ B&#38;lt;--project_url=...&#38;gt; ]
+
+=head1 DESCRIPTION
+
+B&#38;lt;--project_url=...&#38;gt;
+
+=over
+
+Set a URL for the project.
+
+=back
+
+B&#38;lt;--feed_url=...&#38;gt;
+
+=over
+
+Set an explicit URL for the feed itself.
+
+=back
+
+B&#38;lt;--title=...&#38;gt;
+
+=over
+
+Set an explicit title for the feed.  Will otherwise be read from
+.git/description, if available.
+
+=back
+
+B&#38;lt;--entries=&#38;gt;I&#38;lt;n&#38;gt;
+
+=over
+
+Explicitly request I&#38;lt;n&#38;gt; entries.  Defaults to 10.
+
+=back
+
+B&#38;lt;--author=...&#38;gt;
+
+=over
+
+Explicitly set an author string.  Defaults to git config&#38;#39;s current idea of
+user.name.
+
+=back
+
+=head1 EXAMPLES
+
+    git feed --project_url=https://p1k3.com/userland-book/ &#38;gt; feed.xml
+
+=head1 AUTHOR
+
+Brennen Bearnes &#38;lt;bbearnes@gmail.com&#38;gt;
+
+=head1 LICENSE
+
+This utility is free software, licensed under the terms of the GPL, v2.
+See COPYING for a complete copy of the license.
+
diff --git a/git-feed b/git-feed
new file mode 100755
index 0000000..2c0299e
--- /dev/null
+++ b/git-feed
@@ -0,0 +1,179 @@
+#!/usr/bin/env perl
+
+=pod
+
+=head1 NAME
+
+git-feed - generate an Atom feed of git commits in the current repository
+
+=head1 SYNOPSIS
+
+git-feed [ B&#38;lt;--project_url=...&#38;gt; ]
+
+=head1 DESCRIPTION
+
+B&#38;lt;--project_url=...&#38;gt;
+
+=over
+
+Set a URL for the project.
+
+=back
+
+B&#38;lt;--feed_url=...&#38;gt;
+
+=over
+
+Set an explicit URL for the feed itself.
+
+=back
+
+B&#38;lt;--title=...&#38;gt;
+
+=over
+
+Set an explicit title for the feed.  Will otherwise be read from
+.git/description, if available.
+
+=back
+
+B&#38;lt;--entries=&#38;gt;I&#38;lt;n&#38;gt;
+
+=over
+
+Explicitly request I&#38;lt;n&#38;gt; entries.  Defaults to 10.
+
+=back
+
+B&#38;lt;--author=...&#38;gt;
+
+=over
+
+Explicitly set an author string.  Defaults to git config&#38;#39;s current idea of
+user.name.
+
+=back
+
+=head1 EXAMPLES
+
+    git feed --project_url=https://p1k3.com/userland-book/ &#38;gt; feed.xml
+
+=head1 AUTHOR
+
+Brennen Bearnes &#38;lt;bbearnes@gmail.com&#38;gt;
+
+=head1 LICENSE
+
+This utility is free software, licensed under the terms of the GPL, v2.
+See COPYING for a complete copy of the license.
+
+=cut
+
+use warnings;
+use strict;
+use 5.10.0;
+use XML::Atom::SimpleFeed;
+use HTML::Entities;
+use Getopt::Long;
+use POSIX qw(strftime);
+use IPC::System::Simple qw(capturex);
+
+# Figure out where top-level .git resides:
+my $repo_base = git(&#38;#39;rev-parse&#38;#39;, &#38;#39;--show-toplevel&#38;#39;);
+chomp($repo_base);
+
+my $title = &#38;#39;git log&#38;#39;;
+$title = slurp(&#38;quot;$repo_base/.git/description&#38;quot;)
+  if (-f &#38;quot;$repo_base/.git/description&#38;quot;);
+
+my $author = git_config(&#38;#39;user.name&#38;#39;);
+chomp($author);
+
+my $feed_link = git_config(&#38;#39;feed.link&#38;#39;);
+my $project_link = git_config(&#38;#39;feed.projectlink&#38;#39;);
+my $entries = 10;
+
+GetOptions(
+  &#38;quot;author:s&#38;quot;       =&#38;gt; \$author,
+  &#38;quot;entries:i&#38;quot;      =&#38;gt; \$entries,
+  &#38;quot;feed_link:s&#38;quot;    =&#38;gt; \$feed_link,
+  &#38;quot;project_link:s&#38;quot; =&#38;gt; \$project_link,
+  &#38;quot;title:s&#38;quot;        =&#38;gt; \$title,
+);
+
+# Where does this project live on the web?
+unless ($project_link) {
+  say &#38;quot;Project link required - use one of:&#38;quot;;
+  say &#38;quot;\tgit feed --project_link=https://yourlinkhere/&#38;quot;;
+  say &#38;quot;\tgit config feed.projectlink https://yourlinkhere/&#38;quot;;
+  exit(1);
+}
+
+# No feed link set?  Make something up.
+unless ($feed_link) {
+  $feed_link = $project_link . &#38;#39;feed.xml&#38;#39;;
+}
+
+my $log = capturex(&#38;#39;git&#38;#39;, &#38;#39;log&#38;#39;, &#38;quot;-$entries&#38;quot;, qq{--pretty=format:%H _ %ai _ %s});
+
+my $feed = XML::Atom::SimpleFeed-&#38;gt;new(
+  title     =&#38;gt; $title,
+  link      =&#38;gt; $project_link,
+  link      =&#38;gt; { rel =&#38;gt; &#38;#39;self&#38;#39;, href =&#38;gt; $feed_link, },
+  author    =&#38;gt; $author,
+  id        =&#38;gt; $project_link,
+  generator =&#38;gt; &#38;#39;XML::Atom::SimpleFeed&#38;#39;,
+
+  # this could be better - just uses current time, at the moment:
+  updated   =&#38;gt; iso_date(time()),
+);
+
+while ($log =~ m/^([a-z0-9]+) _ (.*) _ (.*)$/gm) {
+  my $hash = $1;
+  my $full_commit = git(&#38;#39;show&#38;#39;, $hash);
+  my $formatted_commit = &#38;#39;&#38;lt;pre&#38;gt;&#38;#39; . encode_entities($full_commit) . &#38;#39;&#38;lt;/pre&#38;gt;&#38;#39;;
+  my $date = $2;
+  my $subj = $3;
+
+  $feed-&#38;gt;add_entry(
+    title     =&#38;gt; $subj,
+    link      =&#38;gt; $project_link,
+    id        =&#38;gt; $hash,
+    content   =&#38;gt; $formatted_commit,
+    updated   =&#38;gt; $date,
+  );
+}
+
+print $feed-&#38;gt;as_string;
+
+sub iso_date {
+  my ($time) = @_;
+  return strftime(&#38;quot;%Y-%m-%dT%H:%M:%SZ&#38;quot;, localtime($time));
+}
+
+# get the contents of a file
+sub slurp {
+  my ($file) = @_;
+  my $everything;
+
+  open my $fh, &#38;#39;&#38;lt;&#38;#39;, $file
+    or die &#38;quot;Couldn&#38;#39;t open $file: $!\n&#38;quot;;
+
+  # line separator:
+  local $/ = undef;
+  $everything = &#38;lt;$fh&#38;gt;;
+
+  close $fh
+    or die &#38;quot;Couldn&#38;#39;t close: $!&#38;quot;;
+
+  return $everything;
+}
+
+# run git with some options, return result
+sub git { capturex(&#38;#39;git&#38;#39;, @_); }
+
+sub git_config {
+  my ($key) = @_;
+  my $value = capturex([0,1], &#38;#39;git&#38;#39;, &#38;#39;config&#38;#39;, &#38;#39;--get&#38;#39;, $key);
+  chomp($value);
+}
&lt;/pre&gt;</content><updated>2014-10-28 04:51:03 -0600</updated></entry></feed>